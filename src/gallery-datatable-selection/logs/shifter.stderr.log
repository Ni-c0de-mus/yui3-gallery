shifter [err] /src/gallery-datatable-selection/js/datatable-selection.js contains 53 lint errors
   #1: Expected '{' and instead saw 'return'.
       if (!Y.Lang.isString(v)) return false; // line 69, pos 38
   #2: Expected '{' and instead saw 'return'.
       if (!Y.Lang.isString(v)) return false; // line 86, pos 38
   #3: Too many var statements.
       var colName; // line 280, pos 13
   #4: Expected '{' and instead saw 'tds'.
       tds.push( item ); // line 304, pos 17
   #5: Expected '{' and instead saw 'tdNodes'.
       tdNodes.each(function(item){ tds.push( item )}); // line 308, pos 21
   #6: Missing semicolon.
       tdNodes.each(function(item){ tds.push( item )}); // line 308, pos 66
   #7: Expected '{' and instead saw 'this'.
       this._eventHandles.selectorSelect.detach(); // line 362, pos 13
   #8: Expected '{' and instead saw 'keepPrev'.
       keepPrev =  this.get('selectionMulti') === true && this._clickModifiers.metaKey === true; // line 425, pos 13
   #9: Expected '{' and instead saw 'keepPrev'.
       keepPrev =  this.get('selectionMulti') === true && this._clickModifiers.ctrlKey === true; // line 427, pos 13
   #10: Expected '{' and instead saw 'this'.
       if ( !keepPrev && !keepRange && this._selections.length>1 ) this.clearSelections(); // line 435, pos 69
   #11: Too many var statements.
       var tar = this._processNodeAction(o,'select', !keepPrev ); // line 444, pos 17
   #12: Expected '{' and instead saw 'this'.
       if ( !keepPrev ) this._selections = []; // line 446, pos 30
   #13: Too many var statements.
       var sobj = { selectionMode : this.get('selectionMode')  }; // line 459, pos 13
   #14: Expected '{' and instead saw 'sobj'.
       sobj['cells'] = this.get('selectedCells'); // line 462, pos 13
   #15: ['cells'] is better written in dot notation.
       sobj['cells'] = this.get('selectedCells'); // line 462, pos 17
   #16: Expected '{' and instead saw 'sobj'.
       sobj['rows'] = this.get('selectedRows'); // line 464, pos 13
   #17: ['rows'] is better written in dot notation.
       sobj['rows'] = this.get('selectedRows'); // line 464, pos 17
   #18: Too many var statements.
       var newRec  = this.getRecord(tarNew), // line 504, pos 17
   #19: Too many var statements.
       var delCol = newColI - prevColI, // line 514, pos 17
   #20: Too many var statements.
       var coldir = (delCol<0) ? -1 : 1, // line 526, pos 25
   #21: Too many var statements.
       for(var j=0; j<=Math.abs(delRow); j++) // line 530, pos 29
   #22: Expected '{' and instead saw 'for'.
       for(var i=0; i<=Math.abs(delCol); i++) { // line 531, pos 25
   #23: Too many var statements.
       for(var i=0; i<=Math.abs(delCol); i++) { // line 531, pos 33
   #24: Too many var statements.
       var rowdir = (delRow<0) ? -1 : 1, // line 541, pos 25
   #25: 'rowdir' is already defined.
       var rowdir = (delRow<0) ? -1 : 1, // line 541, pos 32
   #26: Too many var statements.
       for(var j=0; j<=Math.abs(delRow); j++) { // line 544, pos 29
   #27: 'j' is already defined.
       for(var j=0; j<=Math.abs(delRow); j++) { // line 544, pos 30
   #28: Mixed spaces and tabs.
       if ( tr.get('tagName').toLowerCase() === 'tr' && Y.Array.indexOf(trs,tr) === -1) { // line 584, pos 1
   #29: Expected '{' and instead saw 'return'.
       if (!item) return; // line 623, pos 24
   #30: Expected '{' and instead saw 'row'.
       if ( item.record ) row = this.getRow( item.record ); // line 675, pos 36
   #31: Expected '{' and instead saw 'col'.
       if ( item.column ) col = this.getColumn(item.column); // line 676, pos 36
   #32: Too many var statements.
       var ckey = col.key || col.name; // line 679, pos 25
   #33: Expected '{' and instead saw 'return'.
       if( !this._selections || this._selections.length === 0 ) return; // line 725, pos 66
   #34: Expected '{' and instead saw 'this'.
       this._selections.push( r.record ); // line 747, pos 21
   #35: Expected '{' and instead saw 'this'.
       this._selections.push({record:r.record, colIndex:r.columnIndex}); // line 755, pos 21
   #36: Expected '{' and instead saw 'return'.
       if( !this._selections || this._selections.length === 0 ) return; // line 773, pos 66
   #37: Too many var statements.
       var buffer = []; // line 775, pos 13
   #38: Expected '===' and instead saw '=='.
       if ( this.get(modeName) == "cell" ) { // line 826, pos 33
   #39: Expected '===' and instead saw '=='.
       } else if ( this.get(modeName) == "row" ) { // line 829, pos 40
   #40: Line too long.
       tarPrev = (tarPrev.get('tagName').search(/td/i) === 0 ) ? tarPrev.ancestor('tr') : ( tarPrev.get('tagName').search(/tr/i) === 0 ) ? tarPrev : null ; // line 835, pos 164
   #41: Expected '{' and instead saw 'tarPrev'.
       tarPrev = (tarPrev.get('tagName').search(/td/i) === 0 ) ? tarPrev.ancestor('tr') : ( tarPrev.get('tagName').search(/tr/i) === 0 ) ? tarPrev : null ; // line 835, pos 17
   #42: Expected '{' and instead saw 'tarPrev'.
       if ( tarPrev && erasePrev )  tarPrev.removeClass(className); // line 838, pos 38
   #43: Expected '{' and instead saw 'tarNew'.
       if ( tarNew ) tarNew.addClass(className); // line 839, pos 23
   #44: Expected '{' and instead saw 'nodes'.
       nodes.all('.'+type).removeClass(type); // line 854, pos 13
   #45: Expected '{' and instead saw 'this'.
       if ( this._eventHandles.selectorHighlight ) this._eventHandles.selectorHighlight.detach(); // line 869, pos 53
   #46: Expected '{' and instead saw 'return'.
       if(val==='none') return; // line 870, pos 26
   #47: Expected '{' and instead saw 'this'.
       if ( this._eventHandles.selectorSelect ) this._eventHandles.selectorSelect.detach(); // line 893, pos 50
   #48: Expected '{' and instead saw 'return'.
       if(val==='none') return; // line 894, pos 26
   #49: Expected '{' and instead saw 'sel'.
       if ( sel && sel.empty ) sel.empty();    // works on chrome // line 924, pos 33
   #50: Expected '{' and instead saw 'sel'.
       if ( sel && sel.removeAllRanges ) sel.removeAllRanges();    // works on FireFox // line 925, pos 43
   #51: 'tar' is defined but never used.
       var tar = this._processNodeAction(o,'highlight',true); // line 409, pos 16
   #52: 'tr' is defined but never used.
       tr, td; // line 730, pos 15
   #53: 'td' is defined but never used.
       tr, td; // line 730, pos 19
shifter [err] /assets/skins/sam/gallery-datatable-selection-skin.css contains 2 lint errors
   #1: [warning] Don't use adjoining classes.
       .yui3-skin-sam .yui3-datatable td.yui3-datatable-sorted.yui3-datatable-sel-highlighted , // line 4, pos 32
   #2: [warning] Don't use adjoining classes.
       .yui3-skin-sam .yui3-datatable td.yui3-datatable-sorted.yui3-datatable-sel-selected , // line 12, pos 32
